name: Build Bypass rules dat files
on:
  workflow_dispatch:
  schedule:
    - cron: "0 22 * * *"
  push:
    branches:
      - master
jobs:
  build:
   runs-on: ubuntu-latest

   steps:
    - name: Checkout codebase
      uses: actions/checkout@v3
      with:
          path: code

    - name: Set variables
      run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "FILE=$PWD" >> $GITHUB_ENV
          echo "CHINA_DOMAINS_URL=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/accelerated-domains.china.conf" >> $GITHUB_ENV
          echo "GEOSITE_CN_URL=https://raw.githubusercontent.com/yuumimi/rules/release/loon/cn.txt" >> $GITHUB_ENV
          sudo timedatectl set-timezone "Asia/Shanghai"
    - uses: de-vri-es/setup-git-credentials@v2
      with:
        credentials: https://sirpdboy:${{ secrets.REPO_TOKEN }}@github.com/

    - name: Combine
      run: |
        curl -sSL -O $CHINA_DOMAINS_URL
        curl -sSL -O $GEOSITE_CN_URL
        
        #curl -sSL -O 'https://raw.githubusercontent.com/yuumimi/rules/release/loon/geolocation-!cn.txt'
          # cat 'geolocation-!cn.txt' | sed '/#/d' | sed '/^\s*$/d' | sed 's@DOMAIN-SUFFIX,@@g;s@DOMAIN,@@g' > ./gfw.txt
          
          cat cn.txt | sed '/#/d' | sed '/^\s*$/d' | sed 's@DOMAIN-SUFFIX,@@g;s@DOMAIN,@@g' > ./cn_1.txt
          cat accelerated-domains.china.conf | sed '/#/d' | sed 's@server=/@@g;s@/114.114.114.114@@g' > ./accelerated-domains.china.txt
          cat cn_1.txt accelerated-domains.china.txt > temp-direct.txt
          sort temp-direct.txt | uniq > domains_cn.txt
          rm -rf accelerated-domains.china.conf cn.txt common.txt accelerated-domains.china.txt cn_1.txt temp-direct.txt
        curl -fsSL https://fastly.jsdelivr.net/gh/privacy-protection-tools/anti-AD/anti-ad-domains.txt > ./ad_list.txt
        sed -i '/^#/d' ad_list.txt
        cid="$(curl -kLfsm 5 https://ispip.clang.cn/all_cn.txt)"
        ipipnet="$(curl -kLfsm 5 https://fastly.jsdelivr.net/gh/17mon/china_ip_list@master/china_ip_list.txt)"
        chunzhen="$(curl -kLfsm 5 https://fastly.jsdelivr.net/gh/gaoyifan/china-operator-ip@ip-lists/china.txt)"
        pdipv4=`cat pdipv4.txt`
        iplist="$cid\n${chunzhen}\n${pdipv4}\n"
        echo -e "${iplist}" | sort | uniq > all_cn.txt
        operator="$(curl -kLfsm 5 https://fastly.jsdelivr.net/gh/gaoyifan/china-operator-ip@ip-lists/china6.txt)"
        clang="$(curl -kLfsm 5 https://ispip.clang.cn/all_cn_ipv6.txt)"
        pdipv6=`cat pdipv6.txt`
        iplist="$operator\n$clang${pdipv6}\n"
        echo -e "${iplist}" | sort | uniq > all_cn_ipv6.txt 
        # soldier="$(curl -kLfsm 5 https://fastly.jsdelivr.net/gh/Loyalsoldier/v2ray-rules-dat@release/gfw.txt)"
        # gfwlist="$(curl -kLfsm 5 https://gitlab.com/gfwlist/gfwlist/raw/master/gfwlist.txt)"
        # gfwlist=`echo "$gfwlist" | base64 -d `
        YW5="$(curl -kLfsm 5 https://fastly.jsdelivr.net/gh/YW5vbnltb3Vz/domain-list-community@release/gfwlist.txt)"
        echo $YW5 | base64 -d  | sort | uniq  > gfwlist.txt
        sed -i '/^@@|/d;/^!/d;/^#/d'  gfwlist.txt
        v4=`cat all_cn.txt | wc -l `
        v6=`cat all_cn_ipv6.txt  | wc -l `
        gfw=`cat gfwlist.txt | wc -l `
        ads=`cat ad_list.txt | wc -l `
        cn=`cat domains_cn.txt | wc -l `
        
          sha256sum all_cn.txt > all_cn.txt.sha256sum
          sha256sum all_cn_ipv6.txt > all_cn_ipv6.txt.sha256sum
          sha256sum gfwlist.txt > gfwlist.txt.sha256sum
          sha256sum ad_list.txt > ad_list.txt.sha256sum
          sha256sum domains_cn.txt > domains_cn.txt.sha256sum
        echo -e " Update $(date +%Y-%m-%d" "%H:%M:%S) for bypass \n domains_cn:$cn \n ipv4:$v4 \n ipv6:$v6 \n GFW:$gfw \n AD_smartdns:$ads" > README.md
        rm -rf gfwlist.tmp
        
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          files: ${{ env.FILE }}/*
          
    - name: Git push assets to "release" branch
      run: |
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add *.txt README.md
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
          retain_days: 1
          keep_minimum_runs: 1

    #- name: Remove old Releases
    #  uses: dev-drprasad/delete-older-releases@v0.2.1
    #  with:
    #      keep_latest: 1
    #      delete_tags: true
     # env:
     #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Delete Artifacts
      uses: geekyeggo/delete-artifact@v2
      with:
         name: |
            bin-archive
